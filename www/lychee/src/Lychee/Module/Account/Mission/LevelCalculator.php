<?php
namespace Lychee\Module\Account\Mission;

class LevelCalculator {
    /**
     * 每级对应的经验值
     * 从1级开始
     * 4 * x^2 + 40 * x
     *
     * @var array
     *
     */
    private $experiences = array(
        0, 44, 96, 156, 224, 300, 384, 476, 576, 684,
        800, 924, 1056, 1196, 1344, 1500, 1664, 1836, 2016, 2204,
        2400, 2604, 2816, 3036, 3264, 3500, 3744, 3996, 4256, 4524,
        4800, 5084, 5376, 5676, 5984, 6300, 6624, 6956, 7296, 7644,
        8000, 8364, 8736, 9116, 9504, 9900, 10304, 10716, 11136, 11564,
        12000, 12444, 12896, 13356, 13824, 14300, 14784, 15276, 15776, 16284,
        16800, 17324, 17856, 18396, 18944, 19500, 20064, 20636, 21216, 21804,
        22400, 23004, 23616, 24236, 24864, 25500, 26144, 26796, 27456, 28124,
        28800, 29484, 30176, 30876, 31584, 32300, 33024, 33756, 34496, 35244,
        36000, 36764, 37536, 38316, 39104, 39900, 40704, 41516, 42336, 43164,
        44000, 44844, 45696, 46556, 47424, 48300, 49184, 50076, 50976, 51884,
        52800, 53724, 54656, 55596, 56544, 57500, 58464, 59436, 60416, 61404,
        62400, 63404, 64416, 65436, 66464, 67500, 68544, 69596, 70656, 71724,
        72800, 73884, 74976, 76076, 77184, 78300, 79424, 80556, 81696, 82844,
        84000, 85164, 86336, 87516, 88704, 89900, 91104, 92316, 93536, 94764,
        96000, 97244, 98496, 99756, 101024, 102300, 103584, 104876, 106176, 107484,
        108800, 110124, 111456, 112796, 114144, 115500, 116864, 118236, 119616, 121004,
        122400, 123804, 125216, 126636, 128064, 129500, 130944, 132396, 133856, 135324,
        136800, 138284, 139776, 141276, 142784, 144300, 145824, 147356, 148896, 150444,
        152000, 153564, 155136, 156716, 158304, 159900, 161504, 163116, 164736,
    );

    /**
     * @param int $experience
     * @return int
     */
    public function calculate($experience) {
        $start = 0;
        $end = count($this->experiences) - 1;

        while ($start <= $end) {
            $middle = (int) ($start + ($end - $start) / 2);
            if ($experience < $this->experiences[$middle]) {
                $end = $middle - 1;
            } else if ($experience > $this->experiences[$middle]) {
                $start = $middle + 1;
            } else {
                return $middle + 1;
            }
        }
        //最小1级
        return $start;
    }

    /**
     * @param int $level
     *
     * @return null|int
     */
    public function getExperienceByLevel($level) {
        if ($level > count($this->experiences) || $level < 1) {
            return null;
        }
        return $this->experiences[$level - 1];
    }
}